!  GMM_USER_FLAGS

      integer, parameter :: GMM_FLAG_RSTR      =     1    ! in restart file
      integer, parameter :: GMM_FLAG_IZER      =     2    ! init to zero
      integer, parameter :: GMM_FLAG_INAN      =     4    ! init to NaNs
      integer, parameter :: GMM_FLAG_IINV      =     8    ! field is invalid and cannot be used
      integer, parameter :: GMM_FLAG_READ      =    16    ! field has been read from restart
      integer, parameter :: GMM_FLAG_CRTD      =    32    ! field has been "created" (used to detect multiple create calls when field read from restart)
      integer, parameter :: GMM_FLAG_STAG_X    =    64    ! Field is staggered along X
      integer, parameter :: GMM_FLAG_STAG_Y    =   128    ! Field is staggered along Y
      integer, parameter :: GMM_FLAG_STAG_Z    =   256    ! Field is staggered along Z

      logical, parameter :: GMM_READ_CKPT=.true.   ! read checkpoint
      logical, parameter :: GMM_WRIT_CKPT=.false.  ! write checkpoint

!  GMM VARIABLE SIZES

      integer, parameter :: GMM_MAXNAMELENGTH    =  32   ! Max. length for variable name
      integer, parameter :: GMM_META_SIZE =  28

!  GMM_ERROR_CODES

      integer, parameter :: GMM_OK                       = 0     ! Returned status code when everything is OK
      integer, parameter :: GMM_ERROR                      = -1   ! Generic error code when there is a problem detected
      integer, parameter :: GMM_KEY_NOT_FOUND            = -2
      integer, parameter :: GMM_VAR_NOT_FOUND            = -3
      integer, parameter :: GMM_INCONSISTENT_DIMS        = -4
      integer, parameter :: GMM_ARRAY_ALREADY_EXISTS     = -5
      integer, parameter :: GMM_VARIABLE_ALREADY_CREATED = -6
      integer, parameter :: GMM_POINTER_TABLE_OVERFLOW   = -7

!  GMM_MESSAGE_LEVELS

      integer, parameter :: GMM_MSG_DEBUG      = -1
      integer, parameter :: GMM_MSG_INFO       =  0
      integer, parameter :: GMM_MSG_WARN       =  1
      integer, parameter :: GMM_MSG_ERROR      =  2
      integer, parameter :: GMM_MSG_SEVERE     =  3
      integer, parameter :: GMM_MSG_FATAL      =  4

#define GMM_IS_OK(errcode) (errcode >= 0)
#define GMM_IS_ERROR(errcode) (errcode < 0)

      type gmm_layout                              ! dimensioning elements
         SEQUENCE
         integer :: low,high,halo,halomax,n      ! dimension is low:high, useful contents 1..n
      end type

      type gmm_attributes
        SEQUENCE
        integer*8 :: key          ! unique key, used mainly for vmmget interface
        integer*8 :: uuid1, uuid2 ! extra keys used for lookup in external tables or additional flags
        integer   :: initmode                   ! how the field must be initialized (default=-1, no init)
        integer   :: flags                      ! flags (valid, restart, .... )
      end type

      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      integer, parameter                            :: GMM_NULL_FLAGS=0
      type(gmm_layout), parameter                   :: GMM_NULL_LAYOUT=gmm_layout(0,0,0,0,0)
      type(gmm_layout), parameter, dimension(4)     :: GMM_NULL_LAYOUTS = (/GMM_NULL_LAYOUT, GMM_NULL_LAYOUT, GMM_NULL_LAYOUT, GMM_NULL_LAYOUT/)
      type(gmm_attributes), parameter               :: GMM_NULL_ATTRIB=gmm_attributes(GMM_KEY_NOT_FOUND,0,0,0,0)
      type(gmm_metadata), parameter                 :: GMM_NULL_METADATA=gmm_metadata(GMM_NULL_LAYOUTS , GMM_NULL_ATTRIB)
!!===================== gmm_checkpoint_all =====================
      interface
!
!        if  read_or_write is READ_CKPT (.true.) , read full checkpoint (all types)
!        if  read_or_write is WRIT_CKPT (.false.) , write full checkpoint (all types)
!
      integer function gmm_checkpoint_all(read_or_write)
      logical read_or_write
      end function gmm_checkpoint_all
      end interface 
!!===================== gmm_checkpoint =====================
      interface 
!
      integer function gmm_checkpoint184(read_or_write)
      logical read_or_write
      end function gmm_checkpoint184
      integer function gmm_checkpoint144(read_or_write)
      logical read_or_write
      end function gmm_checkpoint144
      integer function gmm_checkpoint284(read_or_write)
      logical read_or_write
      end function gmm_checkpoint284
      integer function gmm_checkpoint244(read_or_write)
      logical read_or_write
      end function gmm_checkpoint244
      integer function gmm_checkpoint384(read_or_write)
      logical read_or_write
      end function gmm_checkpoint384
      integer function gmm_checkpoint183(read_or_write)
      logical read_or_write
      end function gmm_checkpoint183
      integer function gmm_checkpoint143(read_or_write)
      logical read_or_write
      end function gmm_checkpoint143
      integer function gmm_checkpoint283(read_or_write)
      logical read_or_write
      end function gmm_checkpoint283
      integer function gmm_checkpoint243(read_or_write)
      logical read_or_write
      end function gmm_checkpoint243
      integer function gmm_checkpoint383(read_or_write)
      logical read_or_write
      end function gmm_checkpoint383
      integer function gmm_checkpoint182(read_or_write)
      logical read_or_write
      end function gmm_checkpoint182
      integer function gmm_checkpoint142(read_or_write)
      logical read_or_write
      end function gmm_checkpoint142
      integer function gmm_checkpoint282(read_or_write)
      logical read_or_write
      end function gmm_checkpoint282
      integer function gmm_checkpoint242(read_or_write)
      logical read_or_write
      end function gmm_checkpoint242
      integer function gmm_checkpoint382(read_or_write)
      logical read_or_write
      end function gmm_checkpoint382
      integer function gmm_checkpoint181(read_or_write)
      logical read_or_write
      end function gmm_checkpoint181
      integer function gmm_checkpoint141(read_or_write)
      logical read_or_write
      end function gmm_checkpoint141
      integer function gmm_checkpoint281(read_or_write)
      logical read_or_write
      end function gmm_checkpoint281
      integer function gmm_checkpoint241(read_or_write)
      logical read_or_write
      end function gmm_checkpoint241
      integer function gmm_checkpoint381(read_or_write)
      logical read_or_write
      end function gmm_checkpoint381
      end interface
!        if  read_or_write is READ_CKPT (.true.) , read one checkpoint group of records
!        if  read_or_write is WRIT_CKPT (.false.) , write all groups of records to checkpoint file
!
!!===================== gmm_create (interface) =====================
!
      interface gmm_create
      integer function gmm_create184(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*8, pointer :: p(:,:,:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create184
      integer function gmm_create144(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*4, pointer :: p(:,:,:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create144
      integer function gmm_create284(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*8, pointer :: p(:,:,:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create284
      integer function gmm_create244(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*4, pointer :: p(:,:,:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create244
      integer function gmm_create384(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      complex*8, pointer :: p(:,:,:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create384
      integer function gmm_create183(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*8, pointer :: p(:,:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create183
      integer function gmm_create143(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*4, pointer :: p(:,:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create143
      integer function gmm_create283(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*8, pointer :: p(:,:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create283
      integer function gmm_create243(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*4, pointer :: p(:,:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create243
      integer function gmm_create383(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      complex*8, pointer :: p(:,:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create383
      integer function gmm_create182(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*8, pointer :: p(:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create182
      integer function gmm_create142(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*4, pointer :: p(:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create142
      integer function gmm_create282(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*8, pointer :: p(:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create282
      integer function gmm_create242(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*4, pointer :: p(:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create242
      integer function gmm_create382(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      complex*8, pointer :: p(:,:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create382
      integer function gmm_create181(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*8, pointer :: p(:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create181
      integer function gmm_create141(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*4, pointer :: p(:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create141
      integer function gmm_create281(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*8, pointer :: p(:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create281
      integer function gmm_create241(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*4, pointer :: p(:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create241
      integer function gmm_create381(iname,p,field_meta,flags_arg)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      complex*8, pointer :: p(:)
      type(gmm_metadata), intent(inout) :: field_meta               
      integer, intent(in), optional :: flags_arg
      end function gmm_create381
      end interface
!!===================== gmm_create (code) =====================
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
      interface
         function gmm_encodemeta(F_meta,F_code) result(F_istat)
      type gmm_layout                              ! dimensioning elements
         SEQUENCE
         integer :: low,high,halo,halomax,n      ! dimension is low:high, useful contents 1..n
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          ! unique key, used mainly for vmmget interface
        integer*8 :: uuid1, uuid2 ! extra keys used for lookup in external tables or additional flags
        integer   :: initmode                   ! how the field must be initialized (default=-1, no init)
        integer   :: flags                      ! flags (valid, restart, .... )
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
         type(gmm_metadata), intent(in) :: F_meta  !- GMM Metadata
         integer,            intent(out):: F_code(:)
         integer ::  F_istat  !status
         end function gmm_encodemeta
         function gmm_decodemeta(F_meta,F_code) result(F_istat)
      type gmm_layout                              ! dimensioning elements
         SEQUENCE
         integer :: low,high,halo,halomax,n      ! dimension is low:high, useful contents 1..n
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          ! unique key, used mainly for vmmget interface
        integer*8 :: uuid1, uuid2 ! extra keys used for lookup in external tables or additional flags
        integer   :: initmode                   ! how the field must be initialized (default=-1, no init)
        integer   :: flags                      ! flags (valid, restart, .... )
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
         type(gmm_metadata), intent(out):: F_meta  !- GMM Metadata
         integer,            intent(in) :: F_code(:)
         integer ::  F_istat  !status
         end function gmm_decodemeta
       end interface
!!===================== gmm_get (interface) =====================
!
      interface gmm_get
      integer function gmm_getmeta2(iname,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      type(gmm_metadata), intent(out) :: m               
      end function gmm_getmeta2
      integer function gmm_get184(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*8, pointer :: p(:,:,:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get184
      integer function gmm_get144(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*4, pointer :: p(:,:,:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get144
      integer function gmm_get284(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*8, pointer :: p(:,:,:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get284
      integer function gmm_get244(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*4, pointer :: p(:,:,:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get244
      integer function gmm_get384(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      complex*8, pointer :: p(:,:,:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get384
      integer function gmm_get183(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*8, pointer :: p(:,:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get183
      integer function gmm_get143(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*4, pointer :: p(:,:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get143
      integer function gmm_get283(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*8, pointer :: p(:,:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get283
      integer function gmm_get243(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*4, pointer :: p(:,:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get243
      integer function gmm_get383(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      complex*8, pointer :: p(:,:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get383
      integer function gmm_get182(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*8, pointer :: p(:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get182
      integer function gmm_get142(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*4, pointer :: p(:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get142
      integer function gmm_get282(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*8, pointer :: p(:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get282
      integer function gmm_get242(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*4, pointer :: p(:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get242
      integer function gmm_get382(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      complex*8, pointer :: p(:,:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get382
      integer function gmm_get181(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*8, pointer :: p(:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get181
      integer function gmm_get141(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      integer*4, pointer :: p(:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get141
      integer function gmm_get281(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*8, pointer :: p(:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get281
      integer function gmm_get241(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      real*4, pointer :: p(:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get241
      integer function gmm_get381(iname,p,m)
      type gmm_layout                              
         SEQUENCE
         integer :: low,high,halo,halomax,n      
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          
        integer*8 :: uuid1, uuid2 
        integer   :: initmode                   
        integer   :: flags                      
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname               
      complex*8, pointer :: p(:)
      type(gmm_metadata), optional, intent(out) :: m               
      end function gmm_get381
      end interface
      interface gmm_delete
      integer function gmm_delete(iname)
      character(len=*), intent(in) :: iname
      end function gmm_delete
      end interface
      interface
      integer function gmm_getmeta(varname, meta)
      type gmm_layout                              ! dimensioning elements
         SEQUENCE
         integer :: low,high,halo,halomax,n      ! dimension is low:high, useful contents 1..n
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          ! unique key, used mainly for vmmget interface
        integer*8 :: uuid1, uuid2 ! extra keys used for lookup in external tables or additional flags
        integer   :: initmode                   ! how the field must be initialized (default=-1, no init)
        integer   :: flags                      ! flags (valid, restart, .... )
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: varname
      type(gmm_metadata), intent(out) :: meta
      end function gmm_getmeta
      end interface
      interface
      integer function gmm_nkeys()
      end function gmm_nkeys
      end interface
      interface
      integer function gmm_keys(taglist,pattern)
      character(len=*), intent(out) :: taglist(:)
      character(len=*), intent(in), optional :: pattern
      end function gmm_keys
      end interface
!
      interface
      integer function gmm_rename(old_varname, new_varname)
      character(len=*), intent(in) :: old_varname, new_varname
      end function gmm_rename
      end interface
      interface
      integer function gmm_shuffle(taglist)
      character(len=*), intent(in) :: taglist(:)
      end function gmm_shuffle
      end interface
      interface
      function gmm_updatemeta(iname, F_meta) result(F_istat)
      type gmm_layout                              ! dimensioning elements
         SEQUENCE
         integer :: low,high,halo,halomax,n      ! dimension is low:high, useful contents 1..n
      end type
      type gmm_attributes
        SEQUENCE
        integer*8 :: key          ! unique key, used mainly for vmmget interface
        integer*8 :: uuid1, uuid2 ! extra keys used for lookup in external tables or additional flags
        integer   :: initmode                   ! how the field must be initialized (default=-1, no init)
        integer   :: flags                      ! flags (valid, restart, .... )
      end type
      type gmm_metadata
        SEQUENCE
        type(gmm_layout), dimension(4) :: l
        type(gmm_attributes) :: a
      end type
      character(len=*), intent(in) :: iname
      type(gmm_metadata), intent(in) :: F_meta  !- GMM Metadata
      integer ::  F_istat  !status
      end function gmm_updatemeta
      end interface
      interface
      integer function gmm_verbosity(verbose_level)
      integer, intent(in) :: verbose_level
      end function gmm_verbosity
      end interface
       interface
         subroutine gmm_dumpinfo(fldstat)
         logical, intent(in), optional :: fldstat
         end subroutine gmm_dumpinfo
       end interface
